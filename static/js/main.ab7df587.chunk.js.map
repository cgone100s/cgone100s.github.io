{"version":3,"sources":["firebase.js","routes/Auth.js","redux/modules/calendar.js","Calendar.js","routes/Upload.js","routes/Detail.js","routes/Profile.js","SendBird.js","components/ChatEvent.js","components/CustomizedApp.js","routes/Chat.js","CalendarFind.js","components/Router.js","components/App.js","reportWebVitals.js","redux/configStore.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","authService","auth","firebaseInstance","Auth","onSocialClick","event","a","target","name","provider","GoogleAuthProvider","signInWithPopup","data","console","log","user","userInfo","displayName","email","uid","localStorage","setItem","JSON","stringify","docRef","collection","doc","get","then","exists","set","catch","error","className","onClick","calendar_db","getItem","userUid","parse","userChatUrl","userChatUrlList","abc","i","push","chatUrl","abcChunks","length","slice","initialState","list","getCalendar","type","getCalendarFB","dispatch","Promise","all","map","chunk","where","docs","calendar_data","forEach","id","Calendar","props","useDispatch","useSelector","state","calendar","useEffect","data_list","val","title","date","publicId","completed","color","completedDate","filter","useState","btn","plugins","dayGridPlugin","headerToolbar","start","center","end","titleFormat","year","month","events","eventClick","e","history","_def","extendedProps","height","Container","styled","div","Modal","BtnGroup","Upload","dateTime","useRef","plan","addContent","new_item","current","value","creatorId","userObj","planning","add","res","window","alert","display","TextField","style","marginBottom","label","defaultValue","InputLabelProps","shrink","inputRef","borderRadius","border","padding","fontSize","placeholder","ref","Button","variant","marginRight","displayEvent","marginTop","Container2","GoBack","Detail","primaryData","calendarId","match","params","defid","goBack","split","getState","primary_data","calendar_arr","delete","deleteCalendar","calendarData","update","updateCalendar","replace","useHistory","newDisplayName","setNewDisplayName","onSubmit","preventDefault","displaName","updateProfile","refreshUser","onChange","autoFocus","signOut","removeItem","APP_ID","ChatEvent","chatEvent","setChatEvent","reload","setReload","channelUrl","chatEventList","myContentArray","fetchData","eventList","withSendBird","stores","sdkStore","userStore","config","isOnline","userId","accessToken","theme","userListQuery","logger","pubSub","useCallback","initialized","sdk","loading","logDefaultProps","showSettings","setShowSettings","currentChannelUrl","setCurrentChannelUrl","displayEventSet","setDisplayEventSet","setDisplayEvent","displayCon","setDisplayCon","reloadChild","setReloadChild","width","onChannelSelect","channel","url","position","top","left","backgroundColor","alignItems","onCloseClick","Chat","USER_ID","NICKNAME","nickname","CalendarFind","PositionBtnChat","PositionBtnProfile","CalendarViewBtn","withRouter","setDisplay","isLoggedIn","UserJoinedChannels","sb","SendBird","localCacheEnabled","resolve","reject","connect","listQuery","GroupChannel","createMyGroupChannelListQuery","includeEmpty","userIdsIncludeFilter","next","groupChannels","myEventList","undefined","path","exact","Fab","aria-label","render","Profile","component","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","args","currentUser","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","middlewawres","createBrowserHistory","thunk","enhancer","applyMiddleware","rootReducer","combineReducers","action","Set","calendar_list","store","createStore","ReactDOM","document","getElementById"],"mappings":"+RAkBAA,IAASC,cAVc,CACrBC,OAAQC,0CACRC,WAAYD,+BACZE,UAAWF,eACXG,cAAeH,2BACfI,kBAAmBJ,eACnBK,MAAOL,8CAMT,IAAMM,EAAYT,IAASS,YAEdC,EAAcV,IAASW,OACvBC,EAAmBZ,I,OC+BjBa,EAlDF,WAEX,IAAMC,EAAa,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,4DAMR,WAHRD,EADFE,OAAUC,OAKVC,EAAW,IAAIP,EAAiBD,KAAKS,oBAPnB,SASDV,EAAYW,gBAAgBF,GAT3B,cASdG,EATc,OAUpBC,QAAQC,IAAIF,EAAKG,MAEbC,EAAW,CACbC,YAAaL,EAAKG,KAAKE,YACvBC,MAAON,EAAKG,KAAKG,MACjBC,IAAKP,EAAKG,KAAKI,KAGjBC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUP,IAExCQ,EAASzB,EAAU0B,WAAW,SAASC,IAAId,EAAKG,KAAKI,KApBrC,UAsBdK,EAAOG,MAAMC,MAAK,SAACF,GACjBA,EAAIG,OACJhB,QAAQC,IAAI,mBAGZf,EAAU0B,WAAW,SAASC,IAAId,EAAKG,KAAKI,KAAKW,IAAId,GACrDH,QAAQC,IAAI,gBAEjBiB,OAAM,SAACC,GACNnB,QAAQC,IAAI,0BAA2BkB,MA/BvB,4CAAH,sDAqCnB,OACE,qBAAKC,UAAU,gBAAf,SAEE,qBAAKA,UAAU,WAAf,SACE,wBAAQC,QAAS9B,EAAeI,KAAK,SAASyB,UAAU,UAAxD,uC,wGC7CFE,EAAcpC,EAAU0B,WAAW,YACnCV,EAAOK,aAAagB,QAAQ,QAC9BC,EAAU,GACF,MAARtB,IACFsB,EAAUf,KAAKgB,MAAMvB,GAAMI,KAE7B,IAAMoB,EAAcnB,aAAagB,QAAQ,eACnCI,EAAkBlB,KAAKgB,MAAMC,GAC7BE,EAAM,GACZ,IAAK,IAAIC,KAAKF,EACZC,EAAIE,KAAKH,EAAgBE,GAAGE,SAE9BH,EAAIE,KAAKN,GAMT,IAFA,IACMQ,EAAY,GACTH,EAAI,EAAGA,EAAID,EAAIK,OAAQJ,GAFd,GAGhBG,EAAUF,KAAKF,EAAIM,MAAML,EAAGA,EAHZ,KAsBlB,IAOMM,EAAe,CACnBC,KAAM,IAGKC,EAAc,SAACtC,GAC1B,MAAO,CAAEuC,KAZU,wBAYUvC,SAkDlBwC,EAAgB,SAACxC,GAC5B,8CAAO,WAAgByC,GAAhB,SAAA/C,EAAA,6DACLO,QAAQC,IAAI,QADP,SAECwC,QAAQC,IAAIV,EAAUW,IAAV,+BAAAlD,EAAA,MAAc,WAAOmD,GAAP,SAAAnD,EAAA,sEACxBP,EAAU0B,WAAW,YAAYiC,MAAM,WAAY,KAAMD,GAAO9B,MAAMC,MAAK,SAAC+B,GAClF,IAAIC,EAAgB,GACpB/C,QAAQC,IAAI,WAAa8C,GACzBD,EAAKE,SAAQ,SAACnC,GACRA,EAAIG,SACN+B,EAAa,sBAAOA,GAAP,cAAwBE,GAAIpC,EAAIoC,IAAOpC,EAAId,WAE1DC,QAAQC,IAAI8C,MAEdP,EAASH,EAAYU,OAVS,2CAAd,wDAFb,2CAAP,uDClDaG,I,QAAAA,EA/Cf,SAAkBC,GAChB,IAAMX,EAAWY,cACXrD,EAAOsD,aAAY,SAACC,GAAD,OAAWA,EAAMC,SAASnB,QAEnDoB,qBAAU,WACRhB,EAASD,OAGR,IAEH,IAAMkB,EAAY1D,EAAK4C,KAAI,SAACe,GAC1B,MAAO,CACLC,MAAOD,EAAIC,MACXC,KAAMF,EAAIE,KACVC,SAAUH,EAAIT,GACda,UAAWJ,EAAII,UACfC,MAAOL,EAAII,UAAY,UAAY,cAIjCE,EAAgBP,EAAUQ,QAAO,SAACP,GACtC,OAAyB,IAAlBA,EAAII,aArBU,EAwBDI,oBAAS,GAxBR,mBAwBhBC,EAxBgB,KA2BvB,OA3BuB,KA4BrB,8BACE,cAAC,IAAD,CACEC,QAAS,CAACC,KACVC,cAAe,CACbC,MAAO,kBACPC,OAAQ,QACRC,IAAK,IAEPC,YAAa,CAAEC,KAAM,UAAWC,MAAO,SACvCC,OAAQV,EAAMV,EAAYO,EAC1Bc,WAAY,SAACC,GACX5B,EAAM6B,QAAQlD,KAAK,WAAaiD,EAAEvF,MAAMyF,KAAKC,cAAcrB,WAE7DsB,OAAQ,a,mCC8DhB,I,aAAMC,GAAYC,IAAOC,IAAV,sNAkBTC,IAPaF,IAAOC,IAAV,2GAOFD,IAAOC,IAAV,oUAmBLE,GAAWH,IAAOC,IAAV,8IASCG,GAnJf,SAAgBtC,GACd,IAAMuC,EAAWC,mBACXC,EAAOD,mBAEPnD,EAAWY,cAGXyC,EAAa,WACjB,IFsH0B9F,EEtHpB+F,EAAW,CACflC,KAAM8B,EAASK,QAAQC,MACvBrC,MAAOiC,EAAKG,QAAQC,MACpBlC,WAAW,EACXmC,UAAW9C,EAAM+C,QAAQ5F,IACzB6F,SAAUhD,EAAMgD,UAEI,KAAlBL,EAASlC,KAGiB,KAAnBkC,EAASnC,OAIpB3D,QAAQC,IAAIyF,EAASK,QAAQC,OAC7BxD,GFuG0BzC,EEvGH+F,EFwGlB,SAAUtD,GACf,IAAIO,EAAgB,CAClBa,KAAM7D,EAAK6D,KACXD,MAAO5D,EAAK4D,MACZG,WAAW,EACXmC,UAAWlG,EAAKkG,UAChBE,SAAUpG,EAAKoG,UAEjB7E,EACG8E,IAAIrD,GACJhC,MAAK,SAACsF,GACLtD,EAAa,2BAAQA,GAAR,IAAuBE,GAAIoD,EAAIpD,KAC5CjD,QAAQC,IAAI8C,EAAckD,cAE3B/E,OAAM,SAAC6D,GACN/E,QAAQC,IAAI8E,GACZuB,OAAOC,MAAM,wIEvHjBD,OAAOC,MAAM,wEACbpD,EAAMqD,QAAQ,SANZF,OAAOC,MAAM,iEAHbD,OAAOC,MAAM,4DAkBjB,OACE,mCAEE,cAACnB,GAAD,UACE,eAACG,GAAD,WACE,+BACE,cAAC,IAAD,IADF,sDAGA,uBACA,cAACkB,EAAA,EAAD,CACEC,MAAO,CAAEC,aAAc,QACvBC,MAAM,0DACNtE,KAAK,iBACLuE,aAAa,mBACbC,gBAAiB,CACfC,QAAQ,GAEVC,SAAUtB,IAEZ,uBACEpD,KAAK,OACLoE,MAAO,CACLO,aAAc,MACdC,OAAQ,iBACRC,QAAS,OACTC,SAAU,OACVT,aAAc,QAEhBU,YAAY,iEACZC,IAAK1B,IAGP,eAACJ,GAAD,WACE,cAAC+B,EAAA,EAAD,CACEC,QAAQ,YACRd,MAAO,CAAEe,YAAa,QACtBpG,QAAS,WACP8B,EAAMqD,QAAQ,QACdrD,EAAMuE,aAAa,SALvB,sCAUA,cAACH,EAAA,EAAD,CACEC,QAAQ,YACRzD,MAAM,UACN2C,MAAO,CAAEiB,UAAW,OACpBtG,QAAS,WACPwE,IACA1C,EAAMuE,aAAa,SANvB,wD,mFCwBZ,IAAMtC,GAAYC,IAAOC,IAAV,oNAWTsC,GAAavC,IAAOC,IAAV,2GAOVC,GAAQF,IAAOC,IAAV,yWAsBLuC,GAASxC,IAAOC,IAAV,0HAONE,GAAWH,IAAOC,IAAV,gJASCwC,GAvJf,SAAgB3E,GACd,IAAMX,EAAWY,cACXrD,EAAOsD,aAAY,SAACC,GAAD,OAAWA,EAAMC,SAASnB,QACnDoB,qBAAU,WACRhB,EAASD,OAER,IAMH,IAJA,IAEIwF,EAFAC,EAAa7E,EAAM8E,MAAMC,OAAOC,MAI3BtG,EAAI,EAAGA,EAAI9B,EAAKkC,OAAQJ,IAC3B9B,EAAK8B,GAAGoB,KAAO+E,IACjBD,EAAchI,EAAK8B,IAIvB,OACE,qCACE,cAAC,GAAD,UACE,eAAC,GAAD,WACE,cAACgG,GAAD,CACExG,QAAS,WACP8B,EAAM6B,QAAQoD,UAFlB,SAKE,cAAC,KAAD,CAAe1B,MAAO,CAAE3C,MAAO,eAEjC,+BACE,cAAC,KAAD,IADF,iDAGA,+BACE,cAAC,KAAD,CAAmB2C,MAAO,CAAE3C,MAAO,aADrC,sBAEcgE,EACRA,EAAYnE,KAAKyE,MAAM,KAAK,GAC5B,IAAK,IAJX,2BAMGN,EACGA,EAAYnE,KAAKyE,MAAM,KAAK,GAAGA,MAAM,KAAK,GAAK,GAC7C,eACA,eACF,GAVN,WAYGN,EACGA,EAAYnE,KAAKyE,MAAM,KAAK,GAAGA,MAAM,KAAK,GAAK,GAC7CN,EAAYnE,KAAKyE,MAAM,KAAK,GAAGA,MAAM,KAAK,GAC1C,GACA,IACAN,EAAYnE,KAAKyE,MAAM,KAAK,GAAGA,MAAM,KAAK,GAC1CN,EAAYnE,KAAKyE,MAAM,KAAK,GAAGA,MAAM,KAAK,GAC1C,IACAN,EAAYnE,KAAKyE,MAAM,KAAK,GAAGA,MAAM,KAAK,GAC5C,MAEN,+BACE,cAAC,KAAD,CAAY3B,MAAO,CAAE3C,MAAO,aAD9B,4BAEegE,EAAcA,EAAYpE,MAAQ,MAEjD,uBAEA,eAAC,GAAD,WACE,cAAC4D,EAAA,EAAD,CACEC,QAAQ,YACRd,MAAO,CAAEe,YAAa,QACtBpG,QAAS,WH4ES,IAAC4B,EG3EjBT,GH2EiBS,EG3ES+E,EH4EjC,SAAUxF,EAAU8F,GAGzB,IAFA,IACIC,EADEC,EAAeF,IAAW/E,SAASnB,KAEhCP,EAAI,EAAGA,EAAI2G,EAAavG,OAAQJ,IACnC2G,EAAa3G,GAAGoB,KAAOA,IACzBsF,EAAeC,EAAa3G,IAG3B0G,EAAatF,IAGlB3B,EACGT,IAAI0H,EAAatF,IACjBwF,SACA1H,MAAK,SAACsF,GACL7D,EAjHsB,SAACS,GAC7B,MAAO,CAAEX,KAjBI,kBAiBUW,MAgHRyF,CAAezF,OAEzB/B,OAAM,SAAC6D,GACN/E,QAAQC,IAAI8E,GACZuB,OAAOC,MAAM,yIG9FLpD,EAAM6B,QAAQoD,UALlB,6CAUA,cAACb,EAAA,EAAD,CACEC,QAAQ,YACRzD,MAAM,UACN2C,MAAO,CAAEiB,UAAW,OACpBtG,QAAS,WH0FS,IAAC4B,EGzFjBT,GHyFiBS,EGzFS+E,EH0FjC,SAAUxF,EAAU8F,GAGzB,IAFA,IACIC,EADEC,EAAeF,IAAW/E,SAASnB,KAEhCP,EAAI,EAAGA,EAAI2G,EAAavG,OAAQJ,IACnC2G,EAAa3G,GAAGoB,KAAOA,IACzBsF,EAAeC,EAAa3G,IAGhC,IAAI8G,EAAe,CACjBhF,MAAO4E,EAAa5E,MACpBC,KAAM2E,EAAa3E,KACnBE,WAAW,GAGRyE,EAAatF,IAGlB3B,EACGT,IAAI0H,EAAatF,IACjB2F,OAAOD,GACP5H,MAAK,SAACsF,GACL7D,EA7IsB,SAACS,GAC7B,MAAO,CAAEX,KAnBI,kBAmBUW,MA4IR4F,CAAe5F,UG9GhBE,EAAM6B,QAAQoD,UANlB,qDAcN,cAAC,GAAD,CACE/G,QAAS,WACP8B,EAAM6B,QAAQ8D,QAAQ,YChGjB,YAAC3F,GACd,IAAMX,EAAWY,cACX4B,EAAU+D,cAFQ,EAGoB7E,mBAASf,EAAM+C,QAAQ9F,aAH3C,mBAGjB4I,EAHiB,KAGDC,EAHC,KAiBlBC,EAAQ,uCAAG,WAAO1J,GAAP,SAAAC,EAAA,yDACfD,EAAM2J,iBACHhG,EAAM+C,QAAQkD,aAAeJ,EAFjB,gCAGP7F,EAAM+C,QAAQmD,cAAc,CAChCjJ,YAAa4I,IAJF,OAMb7F,EAAMmG,cANO,OAQftE,EAAQlD,KAAK,KARE,2CAAH,sDAgBhB,OALE0B,qBAAU,WACRxD,QAAQC,IAAI,WACZD,QAAQC,IAAIkD,EAAM+C,YAIpB,sBAAK9E,UAAU,YAAf,UACE,uBAAM8H,SAAUA,EAAU9H,UAAU,cAApC,UACE,uBACEmI,SA1BW,SAAC/J,GAAW,IAEhBwG,EACPxG,EADFE,OAASsG,MAEXiD,EAAkBjD,IAuBd1D,KAAK,OACLkH,WAAS,EACTnC,YAAY,eACZrB,MAAOgD,EACP5H,UAAU,cAEZ,uBACEkB,KAAK,SACL0D,MAAM,+CACN5E,UAAU,UACVsF,MAAO,CACLiB,UAAW,SAIjB,sBAAMvG,UAAU,2BAA2BC,QAhDvB,WACpBlC,EAAYsK,UACZjH,EJqDK,CAAEF,KArBG,mBI/BV/B,aAAamJ,WAAW,QACxB1E,EAAQlD,KAAK,MA4Cb,yB,SCzDS6H,I,OAAS,wCCyCPC,GAxCG,SAACzG,GAAW,IAAD,EACOe,mBAAS,IADhB,mBACpB2F,EADoB,KACTC,EADS,OAEC5F,oBAAS,GAFV,mBAEpB6F,EAFoB,KAEZC,EAFY,KAwB3B,OAnBAxG,qBAAU,YACO,uCAAG,8BAAA/D,EAAA,sEACYP,EAAU0B,WAAW,YAAYiC,MAAM,WAAY,KAAMM,EAAM8G,YAAYnJ,MADvF,OACVoJ,EADU,OAEVC,EAAiBD,EAAcpH,KAAKH,KAAI,SAAC9B,GAAD,oBAC5CoC,GAAIpC,EAAIoC,IACLpC,EAAId,WAET+J,EAAaK,GANG,2CAAH,qDAQfC,KACC,CAACjH,EAAM8G,WAAYF,IAEtBvG,qBAAU,WACJL,EAAM4G,SAAWA,GACnBC,EAAU7G,EAAM4G,UAEjB,CAAC5G,EAAM4G,SAIR,mCACCA,GACD,qBAAK3I,UAAU,aAAf,SACGyI,EAAUlH,KAAI,SAAC0H,GAAD,OACb,sBAAKjJ,UAAU,aAAf,UACE,6BAAKiJ,EAAU1G,QACf,8BAAM0G,EAAUzG,SAFeyG,EAAUpH,YCoMpCqH,I,SAAAA,iBArNf,SAAuBnH,GAAO,MAcxBA,EAXFoH,OAAUC,EAHgB,EAGhBA,SAAUC,EAHM,EAGNA,UAHM,EAcxBtH,EAVFuH,OACEC,EALwB,EAKxBA,SACAC,EANwB,EAMxBA,OACA3L,EAPwB,EAOxBA,MACA4L,EARwB,EAQxBA,YACAC,EATwB,EASxBA,MACAC,EAVwB,EAUxBA,cACAC,EAXwB,EAWxBA,OACAC,EAZwB,EAYxBA,OAGoBC,uBAAY,WAClClL,QAAQC,IACN,qBACAuK,EAASW,YACTX,EAASY,IACTZ,EAASa,QACTb,EAASrJ,OAEXnB,QAAQC,IACN,sBACAwK,EAAUU,YACVV,EAAUvK,KACVuK,EAAUY,SAEZrL,QAAQC,IACN,kBACA0K,EACAC,EACA3L,EACA4L,EACAC,EACAC,EACAC,EACAC,KAED,CACDT,EAASW,YACTX,EAASY,IACTZ,EAASa,QACTb,EAASrJ,MACTsJ,EAAUU,YACVV,EAAUvK,KACVuK,EAAUY,QACVV,EACAC,EACA3L,EACA4L,EACAC,EACAC,EACAC,EACAC,GAEFK,GAzD4B,MA4DYpH,oBAAS,GA5DrB,mBA4DrBqH,EA5DqB,KA4DPC,EA5DO,OA6DsBtH,mBAAS,MA7D/B,mBA6DrBuH,EA7DqB,KA6DFC,EA7DE,OA8DkBxH,mBAAS,CAAC,SA9D5B,mBA8DrByH,EA9DqB,KA8DJC,EA9DI,OA+DY1H,mBAAS,CAAC,SA/DtB,mBA+DrBwD,EA/DqB,KA+DPmE,EA/DO,OAgEQ3H,mBAAS,CAAC,SAhElB,mBAgErB4H,EAhEqB,KAgETC,EAhES,OAkEU7H,oBAAS,GAlEnB,mBAkErB8H,EAlEqB,KAkERC,EAlEQ,KAiF5B,OAXAjM,QAAQC,IAAIwL,GAaV,qBAAKrK,UAAU,iBAAf,SACE,sBAAKA,UAAU,qBAAf,UACE,qBAAKA,UAAU,iCAAiCsF,MAAO,CACrDwF,MAAO,OACP/G,OAAQ,QAFV,SAIA,cAAC,KAAD,CACEgH,gBAAiB,SAACC,GAChBpM,QAAQC,IAAI,UAAWmM,GACnBA,GAAWA,EAAQC,MACrBX,EAAqBU,EAAQC,KAC7BN,EAAc,eAMtB,sBAAK3K,UAAU,kCAAkCsF,MAAO,CACtDF,QAAQ,GAAD,OAAKsF,GACZQ,SAAU,WACVC,IAAK,EACLC,KAAM,EACNN,MAAO,OACP/G,OAAQ,QANV,UAQE,wBAAQ/D,UAAU,cAAcC,QAAS,WACrCqK,EAAqB,MACrBK,EAAc,QACdF,EAAgB,SAHpB,kBAOA,wBAAQzK,UAAU,mBAClBC,QAAS,WACPwK,EAAgB,SAChBD,EAAmB,QACnBK,GAAe,IAJjB,mBAQCR,GACC,cAAC,KAAD,CACExB,WAAYwB,OAIhB,sBAAKrK,UAAU,yBAAwBsF,MAAO,CAC9CF,QAAQ,GAAD,OAAKkB,GACZ4E,SAAU,WACVC,IAAK,EACLC,KAAM,EACNN,MAAO,OACP/G,OAAQ,OACRsH,gBAAiB,SAPjB,UASA,wBAAQrL,UAAU,cAAcC,QAAS,WACrCqK,EAAqB,MACrBK,EAAc,QACdF,EAAgB,SAHpB,kBAOA,wBAAQzK,UAAU,mBAClBC,QAAS,WACPwK,EAAgB,UAFlB,mBAME,8BACI,cAAC,GAAD,CAAW5B,WAAYwB,EAAmB1B,OAAQiC,EAAahC,UAAWiC,MAE9E,wBAAQ5K,QAAS,kBAAMuK,EAAmB,UAAUlF,MAAO,CAACgG,WAAY,UAAxE,kBAUF,sBAAKtL,UAAU,4BAA2BsF,MAAO,CACjDF,QAAQ,GAAD,OAAKmF,GACZW,SAAU,WACVC,IAAK,EACLC,KAAM,EACNN,MAAO,OACP/G,OAAQ,OACRsH,gBAAiB,SAPjB,UASA,wBAAQrL,UAAU,cAAcC,QAAS,WACrCqK,EAAqB,MACrBK,EAAc,QACdF,EAAgB,SAHpB,kBAOA,wBAAQzK,UAAU,mBAClBC,QAAS,WACPwK,EAAgB,UAFlB,mBAMA,qBAAKzK,UAAU,sBAAsBsF,MAAO,CAACF,QAAQ,GAAD,OAAKmF,GAAmBO,MAAM,OAAlF,SACI,cAAC,GAAD,CACE/F,SAAUsF,EACVjF,QAASoF,EACTlE,aAAemE,EACf3F,QAAS/C,EAAM+C,eAKtBqF,GACC,qBAAKnK,UAAU,mCAAf,SACE,cAAC,KAAD,CACE6I,WAAYwB,EACZkB,aAAc,WACZnB,GAAgB,gB,OC/Mf,SAASoB,GAAKzJ,GAC3B,IAAM0J,EAAU1J,EAAM+C,QAAQ7F,MACxByM,EAAW3J,EAAM+C,QAAQ9F,YAG/B,OACE,cAAC,KAAD,CAAYnB,MAAO0K,GAAQiB,OAAQiC,EAASE,SAAUD,EAAU5G,QAAS/C,EAAM+C,QAA/E,SACE,cAAC,GAAD,CAAgBA,QAAS/C,EAAM+C,YC+BrC,I,YAAMd,GAAYC,IAAOC,IAAV,kFAKTC,GAAQF,IAAOC,IAAV,qUAmBLE,GAAWH,IAAOC,IAAV,gJASC0H,GAzEf,WACE,IAAMtH,EAAWC,mBAEjB,OACE,mCACE,cAAC,GAAD,UACE,eAAC,GAAD,WACE,+BACE,cAAC,IAAD,IADF,sDAGA,uBACA,cAACc,EAAA,EAAD,CACEC,MAAO,CAAEC,aAAc,QACvBC,MAAM,0DACNtE,KAAK,OACLuE,aAAa,aACbC,gBAAiB,CACfC,QAAQ,GAEVC,SAAUtB,IAEZ,cAAC,GAAD,UACE,cAAC6B,EAAA,EAAD,CACEC,QAAQ,YACRd,MAAO,CAAEe,YAAa,QACtBpG,QAAS,WACPrB,QAAQC,IAAIyF,EAASK,QAAQC,QAJjC,oC,oBCyLNiH,IAdoB5H,IAAOC,IAAV,2NAcCD,IAAOC,IAAV,oLAWf4H,GAAqB7H,IAAOC,IAAV,mLAWlB6H,GAAkB9H,IAAOC,IAAV,yNAaN8H,gBApOG,SAACjK,GAAU,IAAD,EAEIe,mBAAS,QAFb,mBAEnBsC,EAFmB,KAEV6G,EAFU,KAI1B7J,qBAAW,WACTxD,QAAQC,IAAIkD,EAAMmK,YAClBC,OAIWlK,aAAY,SAACC,GAAD,OAAWA,EAAMC,SAASnB,QAE5BO,KAAI,SAACe,GAC1B,MAAO,CACLC,MAAOD,EAAIC,MACXC,KAAMF,EAAIE,KACVC,SAAUH,EAAIT,GACda,UAAWJ,EAAII,UACfC,MAAOL,EAAII,UAAY,UAAY,cARvC,IAyBMyJ,EAAkB,uCAAG,8BAAA9N,EAAA,yDACrB+N,EAAK,IAAIC,KAAS,CAACxO,MAAO0K,GAAQ+D,mBAAmB,IAWpDvK,EAAM+C,SAAY/C,EAAM+C,QAAQ7F,MAZZ,0EAkBjB,IAAIoC,SAAQ,SAACkL,EAASC,GAC1BJ,EAAGK,QAAQ1K,EAAM+C,QAAQ7F,OAAO,SAACH,EAAMiB,GACjCA,EACFyM,EAAOzM,GAEPwM,EAAQzN,SAvBS,gEAkCvB4N,EAAYN,EAAGO,aAAaC,iCACpBC,cAAe,EACzBH,EAAUI,qBAAuB,GACjCJ,EAAUK,MAAK,SAASC,EAAejN,GAWnC,IAAIkN,EAAY,GACK,MAAjBD,QAA2CE,IAAlBF,IAG3BC,EAAcD,EAAczL,KAAI,SAACoC,GAC/B,MAAO,CACLhD,QAASgD,EAAEsH,SAQjB9L,aAAaC,QAAQ,cAAeC,KAAKC,UAAU2N,IACnDrO,QAAQC,IAAIoO,MA/DS,yDAAH,qDAyExB,OAGI,cAAC,IAAD,UACGlL,EAAMmK,WACL,gCACE,eAAC,IAAD,CAAOiB,KAAK,IAAIC,OAAK,EAArB,UACE,cAAC,EAAD,CAAUxJ,QAAS7B,EAAM6B,QAASkB,QAAS/C,EAAM+C,UAUjD,qBAAK9E,UAAU,oBAAoBsF,MAAO,CAACF,QAAQ,GAAD,OAAKA,IAAvD,SACA,cAAC,GAAD,CAAQA,QAAS6G,EAAYnH,QAAS/C,EAAM+C,SAAW/C,EAAM+C,QAAQ5F,IAAM6C,EAAM+C,QAAU,KAAMC,SAAUhD,EAAM+C,SAAW/C,EAAM+C,QAAQ5F,IAAM6C,EAAM+C,QAAQ5F,IAAM,SAGpK,cAAC2M,GAAD,UACE,cAACwB,EAAA,EAAD,CACE1K,MAAM,YACN2K,aAAW,MACXrN,QAAS,WACP8B,EAAM6B,QAAQlD,KAAK,UAJvB,SAOE,cAAC,IAAD,QAGJ,cAACoL,GAAD,UACE,cAACuB,EAAA,EAAD,CACE1K,MAAM,UACN2K,aAAW,MACXrN,QAAS,WACP8B,EAAM6B,QAAQlD,KAAK,aAJvB,SAOE,cAAC,IAAD,QAIJ,cAACqL,GAAD,UACE,eAACsB,EAAA,EAAD,CACEjH,QAAQ,WACRnG,QAASkM,EAFX,UAIE,cAAC,IAAD,IACA,mBAAG7G,MAAO,CAAEU,SAAU,QAAtB,wEAIR,cAAC,IAAD,CAAOmH,KAAK,WAAWI,OAAQ,kBAAM,cAACC,GAAD,CAAS1I,QAAS/C,EAAM+C,QAASoD,YAAanG,EAAMmG,iBACzF,cAAC,IAAD,CAAOiF,KAAK,iBAAiBM,UAAW/G,GAAQ0G,OAAK,IACrD,cAAC,IAAD,CAAOD,KAAK,gBAAgBM,UAAW7B,KACvC,cAAC,IAAD,CAAOuB,KAAK,QAAQI,OAAQ,kBAAM,cAAC,GAAD,CAAMzI,QAAS/C,EAAM+C,gBAGrD,mCACE,cAAC,IAAD,CAAOsI,OAAK,EAACD,KAAK,IAAlB,SACE,cAAC,EAAD,aCnJDO,OAxCf,WAAgB,IAAD,EACW5K,oBAAS,GADpB,mBACN6K,EADM,KACAC,EADA,OAEuB9K,oBAAS,GAFhC,mBAENoJ,EAFM,KAEM2B,EAFN,OAGiB/K,mBAAS,MAH1B,mBAGNgC,EAHM,KAGGgJ,EAHH,KAiCb,OA5BA1L,qBAAU,WACRrE,EAAYgQ,oBAAmB,SAACjP,GAC3BA,GACD+O,GAAc,GACdC,EAAW,CACT9O,YAAaF,EAAKE,YAClBE,IAAKJ,EAAKI,IACVD,MAAOH,EAAKG,MACZgJ,cAAe,SAAC+F,GAAD,OAAUlP,EAAKmJ,cAAc+F,OAG9CH,GAAc,GAEhBD,GAAQ,QAET,IAcD,mCACGD,EAAM,cAAC,GAAD,CAAWzF,YAbF,WAClB,IAAMpJ,EAAOf,EAAYkQ,YACzBH,EAAW,CACT9O,YAAaF,EAAKE,YAClBE,IAAKJ,EAAKI,IACVD,MAAOH,EAAKG,MACZgJ,cAAe,SAAC+F,GAAD,OAAUlP,EAAKmJ,cAAc+F,OAOA9B,WAAYA,EAAYpH,QAASA,IAAa,oBC3BjFoJ,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBzO,MAAK,YAAkD,IAA/C0O,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,qCCARO,IAFiBC,eAEF,CAACC,OAEhBC,GAAWC,KAAe,WAAf,EAAmBJ,IAE9BK,GAAcC,aAAgB,CAAE7M,SboMvB,WAAqD,IAApCD,EAAmC,uDAA3BnB,EAAckO,EAAa,uDAAJ,GAC7D,OAAQA,EAAO/N,MACb,IAAK,wBACH,IAAMvC,EAAI,YAAO,IAAIuQ,IAAJ,YAAYD,EAAOtQ,QACpC,MAAO,CAAEqC,KAAMrC,GAGjB,IAAK,kBACH,IAAM+F,EAAQ,sBAAOxC,EAAMlB,MAAb,CAAmBiO,EAAOtQ,OACxC,MAAO,CAAEqC,KAAM0D,GAEjB,IAAK,kBAEH,IAAMyK,EAAgBjN,EAAMlB,KAAK6B,QAAO,SAACP,GACvC,GAAIA,EAAIT,KAAOoN,EAAO9M,SACpB,OAAOG,KAGX,MAAO,CAAEtB,KAAMmO,GAEjB,IAAK,kBACH,IAAMA,EAAgBjN,EAAMlB,KAAKO,KAAI,SAACe,GACpC,OAAIA,EAAIT,KAAOoN,EAAOpN,GACb,2BAAKS,GAAZ,IAAiBI,WAAW,IAErBJ,KAGX,MAAO,CAAEtB,KAAMmO,GAGjB,IAAK,iBACH,MAAO,CAAEnO,KAAM,IAGjB,QACE,OAAOkB,MarOEkN,GAFDC,aAAYN,GAAaF,ICHvCS,IAAS/B,OACP,cAAC,IAAD,CAAU6B,MAAOA,GAAjB,SACE,cAAC,KAAD,UACE,cAAC,GAAD,QAGJG,SAASC,eAAe,SAM1BtB,O","file":"static/js/main.ab7df587.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport \"firebase/auth\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_D0MAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst firestore = firebase.firestore();\nexport { firestore };\nexport const authService = firebase.auth();\nexport const firebaseInstance = firebase;\n\n\n","import { authService, firebaseInstance, firestore } from \"../firebase\";\nimport React from \"react\";\n\n\nconst Auth = () => { \n  \n  const onSocialClick = async (event) => {\n    const{\n      target: { name },\n    } = event;\n    //새로운 소셜 로그인 추가시 else써서 추가\n    let provider;\n    if(name === \"google\"){\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    }\n    const data = await authService.signInWithPopup(provider);\n    console.log(data.user);\n    \n    var userInfo = {\n      displayName: data.user.displayName,\n      email: data.user.email,\n      uid: data.user.uid,\n    }\n\n    localStorage.setItem('user', JSON.stringify(userInfo));\n\n    var docRef = firestore.collection(\"users\").doc(data.user.uid);\n\n    await docRef.get().then((doc) => {\n        if (doc.exists) {\n            console.log(\"Welcome again!\");\n        } else {\n            // doc.data() will be undefined in this case\n            firestore.collection('users').doc(data.user.uid).set(userInfo);\n            console.log(\"Welcome!\");\n        }\n    }).catch((error) => {\n        console.log(\"Error getting document:\", error);\n    });\n  }\n\n\n\n  return ( \n    <div className=\"authContainer\">\n\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n           Continue with Google \n        </button>\n      </div>\n    </div>\n  );\n}\nexport default Auth;","import { firestore } from '../../firebase';\n\nconst calendar_db = firestore.collection('calendar');\nconst user = localStorage.getItem('user');\nlet userUid = {};\nif (user != null) {\n  userUid = JSON.parse(user).uid;\n}\nconst userChatUrl = localStorage.getItem('userChatUrl');\nconst userChatUrlList = JSON.parse(userChatUrl);\nconst abc = [];\nfor (let i in userChatUrlList) {\n  abc.push(userChatUrlList[i].chatUrl)\n}\nabc.push(userUid)\n\n// const my_calendar = firestore.collection('calendar').where('planning', 'in', abc);\n// Split the array into smaller arrays with a maximum of 10 elements each\nconst chunkSize = 10;\nconst abcChunks = [];\nfor (let i = 0; i < abc.length; i += chunkSize) {\n  abcChunks.push(abc.slice(i, i + chunkSize));\n}\n\n// Query the database for each smaller array and merge the results\n// const my_calendar = [];\n// let querySnapshot;\n// async function fetchMyCalendar() {\n//   await Promise.all(abcChunks.map(async (chunk) => {\n//     querySnapshot = await firestore.collection('calendar').where('planning', 'in', chunk).get();\n//     querySnapshot.forEach((doc) => {\n//       my_calendar.push({ id: doc.id, ...doc.data() });\n//     });\n//   }));\n// }\n\n// fetchMyCalendar();\n\n\n// action\nconst GET_CALENDAR = 'calendar/GET_CALENDAR';\nconst UPLOAD = 'calendar/UPLOAD';\nconst DELETE = 'calendar/DELETE';\nconst UPDATE = 'calendar/UPDATE';\n\nconst RESET = 'calendar/RESET';\n\nconst initialState = {\n  list: [],\n};\n// action creator\nexport const getCalendar = (data) => {\n  return { type: GET_CALENDAR, data };\n};\n\nexport const createCalendar = (data) => {\n  return { type: UPLOAD, data };\n};\nexport const deleteCalendar = (id) => {\n  return { type: DELETE, id };\n};\nexport const updateCalendar = (id) => {\n  return { type: UPDATE, id };\n};\n\nexport const resetCalendar = () => {\n  return { type: RESET}\n};\n// firebase\n// export const getCalendarFB = (data) => {\n//   return function (dispatch) {\n//     querySnapshot.then((docs) => {\n//       let calendar_data = [];\n//       docs.forEach((doc) => {\n//         if (doc.exists) {\n//           calendar_data = [...calendar_data, { id: doc.id, ...doc.data() }];\n//         }\n//       });\n//       dispatch(getCalendar(calendar_data));\n//     });\n//   };\n// };\n\n// export const getCalendarFB = () => {\n//   return function (dispatch) {\n//       console.log(\"Fetching data from Firestore...\");\n//       firestore.collection('calendar').where('planning', 'in', ).get().then((querySnapshot) => {\n//         let calendar_data = [];\n//         console.log(`Found ${querySnapshot.size} documents in Firestore`);\n//         querySnapshot.forEach((doc) => {\n//           if (doc.exists) {\n//             calendar_data = [...calendar_data, { id: doc.id, ...doc.data() }];\n//           }\n//         });\n//         console.log(\"Dispatching calendar data to Redux store...\");\n//         dispatch(getCalendar(calendar_data));\n//       }).catch((error) => {\n//         console.error(error);\n//       });\n\n//   };\n// };\nexport const getCalendarFB = (data) => {\n  return async function (dispatch) {\n    console.log(\"shit\")\n    await Promise.all(abcChunks.map(async (chunk) => {\n      await firestore.collection('calendar').where('planning', 'in', chunk).get().then((docs) => {\n      let calendar_data = [];\n      console.log(\"just got\" + calendar_data)\n      docs.forEach((doc) => {\n        if (doc.exists) {\n          calendar_data = [...calendar_data, { id: doc.id, ...doc.data() }];\n        }\n        console.log(calendar_data);\n      });\n      dispatch(getCalendar(calendar_data));\n    });\n  }));\n  };\n};\n// const my_calendar = [];\n// let querySnapshot;\n// async function fetchMyCalendar() {\n//   await Promise.all(abcChunks.map(async (chunk) => {\n//     querySnapshot = await firestore.collection('calendar').where('planning', 'in', chunk).get();\n//     querySnapshot.forEach((doc) => {\n//       my_calendar.push({ id: doc.id, ...doc.data() });\n//     });\n//   }));\n// }\n\n\n\n\nexport const addCalendarFB = (data) => {\n  return function (dispatch) {\n    let calendar_data = {\n      date: data.date,\n      title: data.title,\n      completed: false,\n      creatorId: data.creatorId,\n      planning: data.planning,\n    };\n    calendar_db\n      .add(calendar_data)\n      .then((res) => {\n        calendar_data = { ...calendar_data, id: res.id };\n        console.log(calendar_data.creatorId);\n      })\n      .catch((e) => {\n        console.log(e);\n        window.alert('에러가 발생했습니다. 나중에 다시 시도해주세요!');\n      });\n  };\n};\nexport const deleteCalendarFB = (id) => {\n  return function (dispatch, getState) {\n    const calendar_arr = getState().calendar.list;\n    let primary_data;\n    for (let i = 0; i < calendar_arr.length; i++) {\n      if (calendar_arr[i].id === id) {\n        primary_data = calendar_arr[i];\n      }\n    }\n    if (!primary_data.id) {\n      return;\n    }\n    calendar_db\n      .doc(primary_data.id)\n      .delete()\n      .then((res) => {\n        dispatch(deleteCalendar(id));\n      })\n      .catch((e) => {\n        console.log(e);\n        window.alert('에러가 발생했습니다. 나중에 다시 시도해 주세요!');\n      });\n  };\n};\n\nexport const updateCalendarFB = (id) => {\n  return function (dispatch, getState) {\n    const calendar_arr = getState().calendar.list;\n    let primary_data;\n    for (let i = 0; i < calendar_arr.length; i++) {\n      if (calendar_arr[i].id === id) {\n        primary_data = calendar_arr[i];\n      }\n    }\n    let calendarData = {\n      title: primary_data.title,\n      date: primary_data.date,\n      completed: true,\n    };\n\n    if (!primary_data.id) {\n      return;\n    }\n    calendar_db\n      .doc(primary_data.id)\n      .update(calendarData)\n      .then((res) => {\n        dispatch(updateCalendar(id));\n      });\n  };\n};\n\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case 'calendar/GET_CALENDAR': {\n      const data = [...new Set([...action.data])];\n      return { list: data };\n    }\n\n    case 'calendar/UPLOAD': {\n      const new_item = [...state.list, action.data];\n      return { list: new_item };\n    }\n    case 'calendar/DELETE': {\n      // eslint-disable-next-line array-callback-return\n      const calendar_list = state.list.filter((val) => {\n        if (val.id !== action.calendar) {\n          return val;\n        }\n      });\n      return { list: calendar_list };\n    }\n    case 'calendar/UPDATE': {\n      const calendar_list = state.list.map((val) => {\n        if (val.id === action.id) {\n          return { ...val, completed: true };\n        } else {\n          return val;\n        }\n      });\n      return { list: calendar_list };\n    }\n\n    case 'calendar/RESET': {\n      return { list: [] };\n    }\n\n    default:\n      return state;\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCalendarFB } from './redux/modules/calendar';\n\nfunction Calendar(props) {\n  const dispatch = useDispatch();\n  const data = useSelector((state) => state.calendar.list);\n\n  useEffect(() => {\n    dispatch(getCalendarFB());\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const data_list = data.map((val) => {\n    return {\n      title: val.title,\n      date: val.date,\n      publicId: val.id,\n      completed: val.completed,\n      color: val.completed ? '#E74C3C' : '#ABEBC6',\n    };\n  });\n\n  const completedDate = data_list.filter((val) => {\n    return val.completed === true;\n  });\n\n  const [btn, setBtn] = useState(true);\n\n\n  return (\n    <div>\n      <FullCalendar\n        plugins={[dayGridPlugin]}\n        headerToolbar={{\n          start: 'prev next today',\n          center: 'title',\n          end: '',\n        }}\n        titleFormat={{ year: 'numeric', month: 'short' }}\n        events={btn ? data_list : completedDate}\n        eventClick={(e) => {\n          props.history.push('/detail/' + e.event._def.extendedProps.publicId);\n        }}\n        height={'100vh'}\n      />\n    </div>\n  );\n}\n\nexport default Calendar;\n","import React, { useRef } from 'react';\nimport Button from '@material-ui/core/Button';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport TextField from '@material-ui/core/TextField';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { addCalendarFB } from '../redux/modules/calendar';\n\nfunction Upload(props) {\n  const dateTime = useRef();\n  const plan = useRef();\n\n  const dispatch = useDispatch();\n\n\n  const addContent = () => {\n    const new_item = {\n      date: dateTime.current.value,\n      title: plan.current.value,\n      completed: false,\n      creatorId: props.userObj.uid,\n      planning: props.planning,\n    };\n    if (new_item.date === '') {\n      window.alert('날짜를 입력해주세요');\n      return;\n    } else if (new_item.title === '') {\n      window.alert('이벤트를 입력해주세요');\n      return;\n    }\n    console.log(dateTime.current.value);\n    dispatch(addCalendarFB(new_item));\n    window.alert('이벤트가 추가되었습니다!');\n    props.display('none');\n  \n    return;\n\n  };\n\n\n\n\n  return (\n    <>\n\n      <Container>\n        <Modal>\n          <h1>\n            <BorderColorIcon /> &nbsp;이벤트 추가하기\n          </h1>\n          <hr />\n          <TextField\n            style={{ marginBottom: '3rem' }}\n            label='날짜를 추가해주세요'\n            type='datetime-local'\n            defaultValue='0000-00-00T00:00'\n            InputLabelProps={{\n              shrink: true,\n            }}\n            inputRef={dateTime}\n          />\n          <input\n            type='text'\n            style={{\n              borderRadius: '5px',\n              border: '1px solid #888',\n              padding: '16px',\n              fontSize: '16px',\n              marginBottom: '3rem',\n            }}\n            placeholder='이벤트를 입력해주세요.'\n            ref={plan}\n          />\n\n          <BtnGroup>\n            <Button\n              variant='contained'\n              style={{ marginRight: '50px' }}\n              onClick={() => {\n                props.display('none');\n                props.displayEvent('none');\n              }}\n            >\n              뒤로가기\n            </Button>\n            <Button\n              variant='contained'\n              color='primary'\n              style={{ marginTop: '5px' }}\n              onClick={() => {\n                addContent();\n                props.displayEvent('none');\n              }}\n              \n            >\n              이벤트 추가\n            </Button>\n          </BtnGroup>\n        </Modal>\n      </Container>\n      {/* <Container2\n        onClick={() => {\n          props.history.replace('/');\n        }}\n      /> */}\n    </>\n  );\n}\n\nconst Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color:rgb(0,0,0,0.5) ;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst Container2 = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n`;\nconst Modal = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: #fff;\n  padding: 24px 50px;\n  border-radius: 4px;\n  width: 800px;\n  height: 400px;\n  box-sizing: border-box;\n  z-index: 10;\n  & h1 {\n    text-align: center;\n    color: #af7ac5;\n  }\n\n  & Button {\n    min-width: 200px;\n  }\n`;\nconst BtnGroup = styled.div`\n  margin: 0 auto;\n  @media only screen and (max-width: 768px) {\n    & Button {\n      width: 100%;\n    }\n  }\n`;\n\nexport default Upload;\n","import React, { useEffect} from 'react';\nimport Button from '@material-ui/core/Button';\nimport AlarmIcon from '@material-ui/icons/Alarm';\nimport RedditIcon from '@material-ui/icons/Reddit';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getCalendarFB,\n  deleteCalendarFB,\n  updateCalendarFB,\n} from '../redux/modules/calendar';\n\nfunction Detail(props) {\n  const dispatch = useDispatch();\n  const data = useSelector((state) => state.calendar.list);\n  useEffect(() => {\n    dispatch(getCalendarFB());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let calendarId = props.match.params.defid;\n\n  let primaryData;\n\n  for (let i = 0; i < data.length; i++) {\n    if (data[i].id === calendarId) {\n      primaryData = data[i];\n    }\n  }\n\n  return (\n    <>\n      <Container>\n        <Modal>\n          <GoBack\n            onClick={() => {\n              props.history.goBack();\n            }}\n          >\n            <ExitToAppIcon style={{ color: '#EC7063' }} />\n          </GoBack>\n          <h1>\n            <AlarmIcon /> &nbsp;상세 일정 보기\n          </h1>\n          <h2>\n            <CalendarTodayIcon style={{ color: '#85C1E9' }} />\n            &nbsp; 날짜: {primaryData\n              ? primaryData.date.split('T')[0]\n              : ' '}{' '}\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            {primaryData\n              ? primaryData.date.split('T')[1].split(':')[0] > 11\n                ? '오후'\n                : '오전'\n              : ''}\n            &nbsp;&nbsp;\n            {primaryData\n              ? primaryData.date.split('T')[1].split(':')[0] > 12\n                ? primaryData.date.split('T')[1].split(':')[0] -\n                  12 +\n                  ':' +\n                  primaryData.date.split('T')[1].split(':')[1]\n                : primaryData.date.split('T')[1].split(':')[0] +\n                  ':' +\n                  primaryData.date.split('T')[1].split(':')[1]\n              : ''}\n          </h2>\n          <h2>\n            <RedditIcon style={{ color: '#85C1E9' }} />\n            &nbsp; 이벤트: {primaryData ? primaryData.title : ''}\n          </h2>\n          <hr />\n\n          <BtnGroup>\n            <Button\n              variant='contained'\n              style={{ marginRight: '50px' }}\n              onClick={() => {\n                dispatch(deleteCalendarFB(calendarId));\n                props.history.goBack();\n              }}\n            >\n              이벤트 삭제\n            </Button>\n            <Button\n              variant='contained'\n              color='primary'\n              style={{ marginTop: '5px' }}\n              onClick={() => {\n                dispatch(updateCalendarFB(calendarId));\n                props.history.goBack();\n              }}\n            >\n              이벤트 완료\n            </Button>\n          </BtnGroup>\n        </Modal>\n      </Container>\n      <Container2\n        onClick={() => {\n          props.history.replace('/');\n        }}\n      />\n    </>\n  );\n}\n\nconst Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst Container2 = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n`;\nconst Modal = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: #fff;\n  padding: 24px 50px;\n  border-radius: 4px;\n  width: 600px;\n  height: 400px;\n  box-sizing: border-box;\n  z-index: 10;\n  & h1 {\n    text-align: center;\n    color: #af7ac5;\n  }\n  & h2 {\n    color: #34495e;\n  }\n\n  & Button {\n    min-width: 200px;\n  }\n`;\nconst GoBack = styled.div`\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  position: relative;\n  left: -30px;\n`;\nconst BtnGroup = styled.div`\n  margin: 0 auto;\n  @media only screen and (max-width: 768px) {\n    & Button {\n      width: 100%;\n    }\n  }\n`;\n\nexport default Detail;\n","import { authService } from \"../firebase\";\nimport React, { useState , useEffect} from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch} from 'react-redux';\nimport { resetCalendar } from '../redux/modules/calendar';\n\nexport default (props) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(props.userObj.displayName);\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    dispatch(resetCalendar());\n    localStorage.removeItem('user');\n    history.push(\"/\");\n  };\n  const onChange = (event) => {\n    const {\n      target: {value},\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if(props.userObj.displaName !== newDisplayName) {\n      await props.userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      props.refreshUser();\n    };\n    history.push(\"/\");\n  };\n\n  useEffect(()=>{\n    console.log('profile');\n    console.log(props.userObj)\n  })\n\nreturn(\n  <div className=\"container\">\n    <form onSubmit={onSubmit} className=\"profileForm\">\n      <input \n        onChange={onChange} \n        type=\"text\" \n        autoFocus \n        placeholder=\"Display name\" \n        value={newDisplayName} \n        className=\"formInput\"\n        />\n      <input\n        type=\"submit\"\n        value=\"프로필 수정 완료\"\n        className=\"formBtn\"\n        style={{\n          marginTop: 10,\n        }}\n      />\n    </form>\n    <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n    </span>\n  </div>\n)\n};","// put your own APP_ID here\n// get your app_id -> https://dashboard.sendbird.com/auth/signin\nexport const APP_ID = \"955C3A3C-AAB3-453E-B6C2-FC26DB354F2E\";\n\n\nexport default {\n  APP_ID\n};\n\n","import React, { useState, useEffect } from \"react\";\nimport { firestore } from '../firebase';\n\nconst ChatEvent = (props) => {\n  const [chatEvent, setChatEvent] = useState([]);\n  const [reload, setReload] = useState(false);\n\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const chatEventList = await firestore.collection(\"calendar\").where('planning', '==', props.channelUrl).get();\n      const myContentArray = chatEventList.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setChatEvent(myContentArray);\n    };\n    fetchData();\n  }, [props.channelUrl, reload]);\n\n  useEffect(() => {\n    if (props.reload !== reload) {\n      setReload(props.reload);\n    }\n  }, [props.reload]);\n\n\n  return (\n    <>\n    {reload &&\n    <div className=\"event-list\">\n      {chatEvent.map((eventList) =>\n        <div className=\"chat-event\" key={eventList.id}>\n          <h4>{eventList.title}</h4>\n          <div>{eventList.date}</div>\n        </div>\n      )}\n    </div>\n      }\n      </>\n  );\n}\n\nexport default ChatEvent;\n\n\n\n\n","import React, { useState, useCallback} from \"react\";\nimport {firestore} from '../firebase';\nimport styled from 'styled-components';\nimport ChatEvent from './ChatEvent';\nimport Upload from \"../routes/Upload\";\n\nimport {\n  Channel as SBConversation,\n  ChannelList as SBChannelList,\n  ChannelSettings as SBChannelSettings,\n  withSendBird\n} from \"sendbird-uikit\";\n\n\n\nfunction CustomizedApp(props) {\n  // default props\n  const {\n    stores: { sdkStore, userStore },\n    config: {\n      isOnline,\n      userId,\n      appId,\n      accessToken,\n      theme,\n      userListQuery,\n      logger,\n      pubSub\n    }\n  } = props;\n  const logDefaultProps = useCallback(() => {\n    console.log(\n      \"SDK store list log\",\n      sdkStore.initialized,\n      sdkStore.sdk,\n      sdkStore.loading,\n      sdkStore.error\n    );\n    console.log(\n      \"User store list log\",\n      userStore.initialized,\n      userStore.user,\n      userStore.loading\n    );\n    console.log(\n      \"Config list log\",\n      isOnline,\n      userId,\n      appId,\n      accessToken,\n      theme,\n      userListQuery,\n      logger,\n      pubSub\n    );\n  }, [\n    sdkStore.initialized,\n    sdkStore.sdk,\n    sdkStore.loading,\n    sdkStore.error,\n    userStore.initialized,\n    userStore.user,\n    userStore.loading,\n    isOnline,\n    userId,\n    appId,\n    accessToken,\n    theme,\n    userListQuery,\n    logger,\n    pubSub\n  ]);\n  logDefaultProps();\n\n  // useState\n  const [showSettings, setShowSettings] = useState(false);\n  const [currentChannelUrl, setCurrentChannelUrl] = useState(null);\n  const [displayEventSet, setDisplayEventSet] = useState(['none']);\n  const [displayEvent, setDisplayEvent] = useState(['none']);\n  const [displayCon, setDisplayCon] = useState(['none']);\n  // const [inConversation, setInConversation] = useState(false);\n  const [reloadChild, setReloadChild] = useState(false);\n\n  \n\n  console.log(currentChannelUrl);\n\n  // const onChannelSelect={(channel) => {\n  //   console.log(\"channel\", channel);\n  //   if (channel && channel.url) {\n  //     setCurrentChannelUrl(channel.url);\n  //     setInConversation(true); // set inConversation to true\n  //   }\n  // }}\n\n\n  return (\n\n    <div className=\"customized-app\">\n      <div className=\"sendbird-app__wrap\">\n        <div className=\"sendbird-app__channellist-wrap\" style={{\n          width: '100%',\n          height: '100%',\n        }}>\n        <SBChannelList\n          onChannelSelect={(channel) => {\n            console.log(\"channel\", channel);\n            if (channel && channel.url) {\n              setCurrentChannelUrl(channel.url);\n              setDisplayCon('block');\n            }\n          }}\n        />\n      </div>\n      {/* <div className=\"sendbird-app__conversation-wrap\"> */}\n      <div className=\"sendbird-app__conversation-wrap\" style={{\n        display: `${displayCon}`,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n      }}>\n        <button className=\"back-button\" onClick={() => {\n            setCurrentChannelUrl(null);\n            setDisplayCon('none');\n            setDisplayEvent('none');\n        }}>\n          Back\n        </button>\n        <button className=\"channelEventList\"\n        onClick={() => {\n          setDisplayEvent('block');\n          setDisplayEventSet('none');\n          setReloadChild(true);\n      }}>\n          Event\n        </button>\n        {currentChannelUrl && (\n          <SBConversation\n            channelUrl={currentChannelUrl}\n          />\n        )}\n      </div>\n        <div className=\"sendbird-app_eventlist\"style={{\n        display: `${displayEvent}`,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'white',\n        }}>\n        <button className=\"back-button\" onClick={() => {\n            setCurrentChannelUrl(null);\n            setDisplayCon('none');\n            setDisplayEvent('none');\n        }}>\n          Back\n        </button>\n        <button className=\"channelEventList\"\n        onClick={() => {\n          setDisplayEvent('block');\n        }}>\n          Event\n        </button>\n          <div >\n              <ChatEvent channelUrl={currentChannelUrl} reload={reloadChild} setReload={setReloadChild}/>\n          </div>\n          <button onClick={() => setDisplayEventSet('block')} style={{alignItems: 'center',}}>+</button>\n          {/* <div className=\"chatEventUploadForm\" style={{display: `${displayEventSet}`, width:'50%'}}>\n            <Upload \n              planning={currentChannelUrl}\n              display={setDisplayEventSet}\n              displayEvent= {setDisplayEvent}\n              userObj={props.userObj}\n            />\n          </div> */}\n        </div> \n        <div className=\"sendbird-app_event-upload\"style={{\n        display: `${displayEventSet}`,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'white',\n        }}>\n        <button className=\"back-button\" onClick={() => {\n            setCurrentChannelUrl(null);\n            setDisplayCon('none');\n            setDisplayEvent('none');\n        }}>\n          Back\n        </button>\n        <button className=\"channelEventList\"\n        onClick={() => {\n          setDisplayEvent('block');\n        }}>\n          Event\n        </button>  \n        <div className=\"chatEventUploadForm\" style={{display: `${displayEventSet}`, width:'50%'}}>\n            <Upload \n              planning={currentChannelUrl}\n              display={setDisplayEventSet}\n              displayEvent= {setDisplayEvent}\n              userObj={props.userObj}\n            />\n          </div>\n        </div>\n      {/* </div> */}\n      {showSettings && (\n        <div className=\"sendbird-app__settingspanel-wrap\">\n          <SBChannelSettings\n            channelUrl={currentChannelUrl}\n            onCloseClick={() => {\n              setShowSettings(false);\n            }}\n          />\n        </div>\n      )}\n    </div>\n    </div>\n\n  );\n}\n\n\nexport default withSendBird(CustomizedApp);\n","import React from \"react\";\nimport { SendBirdProvider as SBProvider } from \"sendbird-uikit\";\nimport \"sendbird-uikit/dist/index.css\";\nimport {APP_ID} from \"../SendBird\";\nimport CustomizedApp from \"../components/CustomizedApp\";\nimport \"../style.css\";\n\n\n\nexport default function Chat(props) {\n  const USER_ID = props.userObj.email;\n  const NICKNAME = props.userObj.displayName\n;\n\n  return (\n    <SBProvider appId={APP_ID} userId={USER_ID} nickname={NICKNAME} userObj={props.userObj} >\n      <CustomizedApp  userObj={props.userObj} />\n    </SBProvider>\n  );\n}\n","import React, { useRef } from 'react';\nimport Button from '@material-ui/core/Button';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport TextField from '@material-ui/core/TextField';\nimport styled from 'styled-components';\n\n\nfunction CalendarFind() {\n  const dateTime = useRef();\n\n  return (\n    <>\n      <Container>\n        <Modal>\n          <h1>\n            <BorderColorIcon /> &nbsp;이벤트 검색하기\n          </h1>\n          <hr />\n          <TextField\n            style={{ marginBottom: '3rem' }}\n            label='날짜를 추가해주세요'\n            type='date'\n            defaultValue='0000-00-00'\n            InputLabelProps={{\n              shrink: true,\n            }}\n            inputRef={dateTime}\n          />\n          <BtnGroup>\n            <Button\n              variant='contained'\n              style={{ marginRight: '50px' }}\n              onClick={() => {\n                console.log(dateTime.current.value);\n              }}\n            >\n              검색\n            </Button>\n\n          </BtnGroup>\n        </Modal>\n      </Container>\n  \n    </>\n  );\n}\n\nconst Container = styled.div`\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Modal = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: #fff;\n  padding: 24px 50px;\n  border-radius: 4px;\n  width: 800px;\n  height: 400px;\n  box-sizing: border-box;\n  z-index: 10;\n  & h1 {\n    text-align: center;\n    color: #af7ac5;\n  }\n\n  & Button {\n    min-width: 200px;\n  }\n`;\nconst BtnGroup = styled.div`\n  margin: 0 auto;\n  @media only screen and (max-width: 768px) {\n    & Button {\n      width: 100%;\n    }\n  }\n`;\n\nexport default CalendarFind;\n","import React, {useEffect, useState} from \"react\";\nimport { withRouter } from 'react-router';\nimport { Route, Switch} from \"react-router-dom\";\nimport { useSelector } from 'react-redux';\nimport Auth from \"../routes/Auth\";\nimport ChatIcon from '@material-ui/icons/Chat';\nimport { Fab } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Person from '@material-ui/icons/Person';\nimport styled from 'styled-components';\nimport Calendar from '../Calendar';\nimport Upload from '../routes/Upload';\nimport Detail from '../routes/Detail';\nimport Profile from '../routes/Profile';\nimport Chat from '../routes/Chat';\nimport CalendarFind from '../CalendarFind';\nimport {APP_ID} from '../SendBird'\nimport SendBird from 'sendbird';\n\n\nconst AppRouter = (props) =>{\n\n  const [display, setDisplay] = useState('none');\n\n  useEffect (()=> {\n    console.log(props.isLoggedIn);\n    UserJoinedChannels();\n\n  })\n\n  const data = useSelector((state) => state.calendar.list);\n\n  const data_list = data.map((val) => {\n    return {\n      title: val.title,\n      date: val.date,\n      publicId: val.id,\n      completed: val.completed,\n      color: val.completed ? '#E74C3C' : '#ABEBC6',\n    };\n  });\n\n \n\n//56-67줄 지우고 46-54까지 살리기\n// get user's channel list\n  // const UserJoinedChannels = async () => {\n  //   var sb = new SendBird({appId: APP_ID, localCacheEnabled: true })\n\n  //   await sb.connect(props.userObj.email, function(user, error) {\n  //     if (error) {\n  //         // Handle error.\n  //     }\n  // });\n\n  const UserJoinedChannels = async () => {\n    var sb = new SendBird({appId: APP_ID, localCacheEnabled: true })\n\n    // if (props.userObj && props.userObj.email) {\n    //     await sb.connect(props.userObj.email, function(user, error) {\n    //         if (error) {\n    //             // Handle error.\n    //         }\n    //     });\n    // } else {\n    //     // Handle case where userObj or email is undefined or null.\n    // }\n    if (!props.userObj || !props.userObj.email) {\n      // Handle case where userObj or email is undefined or null.\n      return;\n    }\n  \n    try {\n      await new Promise((resolve, reject) => {\n        sb.connect(props.userObj.email, (user, error) => {\n          if (error) {\n            reject(error);\n          } else {\n            resolve(user);\n          }\n        });\n      });\n    } catch (error) {\n      // Handle the error here.\n    }\n\n    // Establish connection before calling createMyGroupChannelListQuery\n  // sb.openConnection();\n\n  var listQuery = sb.GroupChannel.createMyGroupChannelListQuery();\n    listQuery.includeEmpty = true;\n    listQuery.userIdsIncludeFilter = [];\n    listQuery.next(function(groupChannels, error) {\n        if (error) {\n            // Handle error.\n        }\n\n        //81줄부터 85줄 살리고 86줄부터97줄 버리기\n        // const myEventList = groupChannels.map((e) => {\n        //   return {\n        //     chatUrl: e.url,\n        //   }\n        // })\n        let myEventList={};\n        if (groupChannels == null || groupChannels === undefined) {\n          // Handle case where groupChannels is null or undefined\n        } else {\n          myEventList = groupChannels.map((e) => {\n            return {\n              chatUrl: e.url,\n            }\n          });\n          \n          // Rest of your code...\n        }\n        \n\n        localStorage.setItem('userChatUrl', JSON.stringify(myEventList));\n        console.log(myEventList);\n        \n  \n        // Through \"groupChannels\" parameter of the callback function, which Sendbird server has passed a result list to,\n        // a list of group channels that have 'Sendbird' in their names is returned.\n    });\n\n\n  }\n\n  return(\n    \n      \n      <Switch>\n        {props.isLoggedIn ? ( \n          <div>\n            <Route path='/' exact>\n              <Calendar history={props.history} userObj={props.userObj}/>\n              {/* <PositionBtnUpload>\n                <Fab\n                  color='extended'\n                  aria-label='add'\n                  onClick={() => setDisplay('block')}\n                >\n                  <AddIcon />\n                </Fab>\n              </PositionBtnUpload> */}\n              <div className=\"myEventUploadForm\" style={{display: `${display}`}}>\n              <Upload display={setDisplay} userObj={props.userObj && props.userObj.uid ? props.userObj : null} planning={props.userObj && props.userObj.uid ? props.userObj.uid : null} />\n              </div>\n\n              <PositionBtnChat>\n                <Fab\n                  color='secondary'\n                  aria-label='add'\n                  onClick={() => {\n                    props.history.push('/chat');\n                  }}\n                >\n                  <ChatIcon />\n                </Fab>\n              </PositionBtnChat>\n              <PositionBtnProfile>\n                <Fab\n                  color='primary'\n                  aria-label='add'\n                  onClick={() => {\n                    props.history.push('/profile');\n                  }}\n                >\n                  <Person />\n                </Fab>\n              </PositionBtnProfile>\n\n              <CalendarViewBtn>\n                <Fab\n                  variant='extended'\n                  onClick={UserJoinedChannels}\n                >\n                  <SearchIcon />\n                  <p style={{ fontSize: '1rem' }}>새로운 이벤트 찾기</p>\n                </Fab>\n              </CalendarViewBtn>\n            </Route>\n          <Route path='/profile' render={() => <Profile userObj={props.userObj} refreshUser={props.refreshUser}/>} />\n          <Route path='/detail/:defid' component={Detail} exact />\n          <Route path='/calendarfind' component={CalendarFind} />\n          <Route path=\"/chat\" render={() => <Chat userObj={props.userObj} />} />\n          </div> \n          ): (\n            <>\n              <Route exact path=\"/\" >\n                <Auth />\n              </Route>\n            </>\n        )}\n      </Switch>\n   \n  )\n}\n\nconst PositionBtnUpload = styled.div`\n  position: fixed;\n  top: 70%;\n  right: 30px;\n  z-index: 10;\n  @media only screen and (max-width: 768px) {\n    top: 60%;\n    left: 10px;\n    & p {\n      display: none;\n    }\n  }\n`;\n\nconst PositionBtnChat = styled.div`\n  position: fixed;\n  top: 80%;\n  right: 30px;\n  z-index: 10;\n  @media only screen and (max-width: 768px) {\n    top: 70%;\n    left: 10px;\n  }\n`;\n\nconst PositionBtnProfile = styled.div`\n  position: fixed;\n  top: 90%;\n  right: 30px;\n  z-index: 10;\n  @media only screen and (max-width: 768px) {\n    top: 90%;\n    left: 10px;\n  }\n`;\n\nconst CalendarViewBtn = styled.div`\n  position: fixed;\n  top: 0;\n  right: 10px;\n  z-index: 10;\n  @media only screen and (max-width: 768px) {\n    top: 80%;\n    left: 10px;\n    & p {\n      display: none;\n    }\n  }\n`;\nexport default withRouter(AppRouter);","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"./Router\"\nimport {authService} from \"../firebase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(()=>{\n    authService.onAuthStateChanged((user)=> {\n      if(user) {\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          email: user.email,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    })\n  }, [])\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      email: user.email,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  \n  return (\n    <>\n      {init? <AppRouter refreshUser={refreshUser} isLoggedIn={isLoggedIn} userObj={userObj}/> : \"Initializing..\"}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport calendar from './modules/calendar';\nimport { createBrowserHistory } from 'history';\nimport thunk from 'redux-thunk';\n\nexport const history = createBrowserHistory();\n\nconst middlewawres = [thunk];\n\nconst enhancer = applyMiddleware(...middlewawres);\n\nconst rootReducer = combineReducers({ calendar });\nconst store = createStore(rootReducer, enhancer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/configStore';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}